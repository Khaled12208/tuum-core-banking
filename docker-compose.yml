services:
  postgres:
    image: postgres:15-alpine
    container_name: tuum-postgres
    environment:
      POSTGRES_DB: tuum_banking
      POSTGRES_USER: tuum_user
      POSTGRES_PASSWORD: tuum_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-config/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - tuum-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tuum_user -d tuum_banking"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: tuum-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: tuum_user
      RABBITMQ_DEFAULT_PASS: tuum_password
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rmq-config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rmq-config/definitions.json:/etc/rmq/definitions.json
    networks:
      - tuum-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  fs-accounts-service:
    build:
      context: .
      dockerfile: fs-accounts-service/Dockerfile
    container_name: tuum-fs-accounts-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tuum_banking
      SPRING_DATASOURCE_USERNAME: tuum_user
      SPRING_DATASOURCE_PASSWORD: tuum_password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: tuum_user
      SPRING_RABBITMQ_PASSWORD: tuum_password
      SERVER_PORT: 8083
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - tuum-network
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8083/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  common-lib:
    build:
      context: .
      dockerfile: common-lib/Dockerfile
    container_name: tuum-common-lib
    networks:
      - tuum-network
    profiles:
      - build

  cs-accounts-events-consumer:
    build:
      context: .
      dockerfile: cs-accounts-events-consumer/Dockerfile
    container_name: tuum-cs-accounts-events-consumer
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tuum_banking
      SPRING_DATASOURCE_USERNAME: tuum_user
      SPRING_DATASOURCE_PASSWORD: tuum_password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: tuum_user
      SPRING_RABBITMQ_PASSWORD: tuum_password
      SERVER_PORT: 8084
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - tuum-network
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8084/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  tuum-network:
    driver: bridge
